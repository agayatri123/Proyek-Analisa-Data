# -*- coding: utf-8 -*-
"""dashboard.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1A3q7_0M5btZqcbc_vsqomurVRH-rFuRN

# Proyek Analisis Data: Persewaan Sepeda
- **Nama:** Anindita Gayatri
- **Email:** agayatri123@yahoo.co.id
- **ID Dicoding:** anindita_gayatri_ukA6
"""

import datetime
import streamlit as st

st.title("dashboard")

st.subheader('Interactive Streamlit')

date = st.date_input(label='Tanggal Sewa Sepeda', min_value=datetime.date(1900, 1, 1))
st.write('Tanggal Sewa:', date)

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import matplotlib.pyplot as plt
import numpy as np
import streamlit as st
from babel.numbers import format_currency
sns.set(style='dark')

# load the dataset
df_all_data= pd.read_csv('all_data.csv')
df_all_data.head()

#######

def create_daily_orders_df(df):
    daily_orders_df = df_all_data.resample(rule='D', on='dteday').agg({
        "order_id": "nunique",
        "total_price": "sum"
    })
    daily_orders_df = daily_orders_df.reset_index()
    daily_orders_df.rename(columns={
        "order_id": "order_count",
        "total_price": "revenue"
    }, inplace=True)
    
    return daily_orders_df

min_date = df_all_data["dteday"].min()
max_date = df_all_data["dteday"].max()

start_date, end_date = st.date_input(
        label='Rentang Waktu',min_value=min_date,
        max_value=max_date,
        value=[min_date, max_date]
    )

st.write(f"Selected Start Date: {min_date}")
st.write(f"Selected End Date: {max_date}")

########

# Menampilkan 2 Graphic

st.subheader('Jumlah Pemakai Sewa Sepeda')

col1, col2 = st.columns(2)

with col1:
    total_pemakai_monthly = daily_orders_df_all['registered'].sum()
    st.metric("Pemakai Registered", value=total_pemakai_monthly)

with col2:
    total_pemakai_casual = daily_orders_df['casual'].sum()
    st.metric("Pemakai Casual", value=total_pemakai_casual)

fig, ax = plt.subplots(figsize=(16, 8))
colors = ["#7CFC00"]

sns.barplot(
    x="mnth",
    y="registered",
    data=df_all_data.sort_values(by="mnth", ascending=False),
    palette=colors,
    ax=ax
    )
ax.tick_params(axis='y', labelsize=20)
ax.tick_params(axis='x', labelsize=15)

st.pyplot(fig)

x = np.random.normal(15, 5, 250)

fig, ax = plt.subplots(figsize=(16, 8))
colors = ["#90CAF9"]

sns.barplot(
    x="mnth",
    y="casual",
    data=df_all_data.sort_values(by="mnth", ascending=False),
    palette=colors,
    ax=ax
    )
ax.tick_params(axis='y', labelsize=20)
ax.tick_params(axis='x', labelsize=15)

st.pyplot(fig)
